% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mrIMLpredicts.R
\name{mrIMLpredicts}
\alias{mrIMLpredicts}
\title{Wrapper to generate multi-response predictive models.}
\usage{
mrIMLpredicts(
  X,
  X1 = NULL,
  Y,
  Model,
  balance_data = "no",
  mode = "regression",
  dummy = FALSE,
  prop = 0.5,
  morans = F,
  tune_grid_size = 10,
  k = 10,
  racing = T,
  seed = sample.int(1e+08, 1)
)
}
\arguments{
\item{X}{A \code{dataframe} represents predictor or feature data.
#'@param X1 A \code{dataframe} extra predictor set used in each model. For the MrIML Joint species distribution model (JSDM) this is just a copy of the response data.}

\item{Y}{A \code{dataframe} is response variable data (species, OTUs, SNPs etc).}

\item{Model}{1 A \code{list} can be any model from the tidy model package. See examples.}

\item{balance_data}{A \code{character} 'up', 'down' or 'no'.}

\item{mode}{\code{character}'classification' or 'regression' i.e., is the generative model a regression or classification?}

\item{dummy}{A \code{logical} 'TRUE or FALSE'.}

\item{morans}{\code{logical} 'TRUE or FALSE'. If 'TRUE' global Morans I is calculated for each response}

\item{tune_grid_size}{A \code{numeric} sets the grid size for hyperparameter tuning. Larger grid sizes increase computational time. Ignored if racing=T.}

\item{k}{A \code{numeric} sets the number of folds in the 10-fold cross-validation. 10 is the default.}

\item{racing}{\code{logical} 'TRUE or FALSE'. If 'TRUE' MrIML performs the grid search using the 'racing' ANOVA method. See https://finetune.tidymodels.org/reference/tune_race_anova.html}
}
\description{
Wrapper to generate multi-response predictive models.
}
\details{
This function produces yhats that used in all subsequent functions.
This function fits separate classification/regression models for each response variable in a data set.  Rows in X (features) have the same id (host/site/population)
as Y. Class imbalance can be a real issue for classification analyses. Class imbalance can be addressed for each
response variable using 'up' (upsampling using ROSE bootstrapping), 'down' (downsampling)
or 'no' (no balancing of classes).
}
